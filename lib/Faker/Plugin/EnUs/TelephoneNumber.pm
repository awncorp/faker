package Faker::Plugin::EnUs::TelephoneNumber;

use 5.018;

use strict;
use warnings;

use Venus::Class 'base';

base 'Faker::Plugin::EnUs';

# VERSION

our $VERSION = '1.16';

# METHODS

sub execute {
  my ($self, $data) = @_;

  return $self->process_markers(
    $self->faker->random->select(format_for_telephone_number()),
    'numbers',
  );
}

sub format_for_telephone_number {
  state $telephone_number = [
    '###-###-####',
    '###-###-####',
    '### ### ####',
    '### ### ####',
    '### ### ####',
    '### ### ####',
    '(###) ###-####',
    '(###) ###-####',
    '(###) ###-####',
    '(###) ###-####',
    '+##(#)##########',
    '+##(#)##########',
    '0##########',
    '0##########',
    '###-###-####',
    '(###) ### ####',
    '1-###-###-####',
    '###.###.####',
    '###-###-####',
    '### ### ####',
    '##########',
    '(###) ###-####',
    '1-###-###-####',
    '###.###.####',
    '###-###-####x###',
    '(###)###-####x###',
    '1-###-###-####x###',
    '###.###.####x###',
    '###-###-#### x####',
    '(###)###-####x####',
    '1-###-###-####x####',
    '###.###.####x####',
    '###-###-####x#####',
    '(###)###-####x#####',
    '1-###-###-####x#####',
    '###.###.#### x#####',
  ]
}

1;
